[{"name":"/#Global logic components/n8n/n8n core component","nodes":[{"id":"2cedb848-0422-3361-5868-124f96afad55","type":"JavaScriptFunction","parameters":{"functionScript":"const input = Noodl.Objects[Inputs.inputObject] || {};\nconst webhookId = Inputs.webhookId;\nconst urlPath = Inputs.testWebhook ? \"webhook-test\" : \"webhook\";\nconst n8nRoot = Inputs.n8nRoot;\nconst queryType = Inputs.queryType || \"POST\";\n\nconst url = `${n8nRoot}/${urlPath}/${webhookId}`;\n\nconsole.log(\"n8n url = \",url)\n\ntry {\n  const response = await fetch(url, {\n    method: queryType,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(input) // Send input as JSON in the body\n  });\n\n  // Check for response.ok to handle non-JSON responses or errors\n  if (!response.ok) {\n    throw new Error(`HTTP error! Status: ${response.status}`);\n  }\n\n  const data = await response.json();\n\n  Outputs.rawJsonResponse = data;\n\n  if (data.code === 200 || !data.code) {\n    Outputs.ResponseData = data;\n    Outputs.Success();\n  } else {\n    Outputs.error = data.response ? data.response : 'Unknown error';\n    Outputs.Failure();\n  }\n  \n} catch (error) {\n  Outputs.error = error.message || error; // Handle and output error message\n  Outputs.Failure();\n}\n"},"ports":[{"name":"in-inputObject","displayName":"inputObject","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-webhookId","displayName":"webhookId","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-testWebhook","displayName":"testWebhook","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-n8nRoot","displayName":"n8nRoot","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-queryType","displayName":"queryType","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-rawJsonResponse","displayName":"rawJsonResponse","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-ResponseData","displayName":"ResponseData","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":13}],"children":[]},{"id":"219697ea-03d4-af5c-9c6b-828c5a6d3d91","type":"Switch","parameters":{"onFromStart":true},"ports":[],"children":[]},{"id":"641639d2-3123-ec59-88b1-ff100e00dcc8","type":"String","parameters":{"value":"http://n8n.localhost"},"ports":[],"children":[]},{"id":"1b0f780b-8598-c36f-d164-97cbdfe50c33","type":"String","parameters":{"value":"fe59eb69-eccf-42f1-90b3-4ffc0c875a5e"},"ports":[],"children":[]},{"id":"c095d84f-b7d3-b26f-b951-0e3b571ac9dc","type":"Component Inputs","parameters":{},"ports":[],"children":[]},{"id":"377416ae-f251-32ff-808b-14172e0530ed","type":"Component Outputs","parameters":{},"ports":[],"children":[]},{"id":"64cf02e5-d905-220c-17e7-dc1ea20cb320","type":"States","parameters":{"states":"POST,GET,PUT,PATCH,DELETE,HEAD"},"ports":[],"children":[]}],"connections":[{"sourceId":"219697ea-03d4-af5c-9c6b-828c5a6d3d91","sourcePort":"state","targetId":"2cedb848-0422-3361-5868-124f96afad55","targetPort":"in-testWebhook"},{"sourceId":"641639d2-3123-ec59-88b1-ff100e00dcc8","sourcePort":"savedValue","targetId":"2cedb848-0422-3361-5868-124f96afad55","targetPort":"in-n8nRoot"},{"sourceId":"1b0f780b-8598-c36f-d164-97cbdfe50c33","sourcePort":"savedValue","targetId":"2cedb848-0422-3361-5868-124f96afad55","targetPort":"in-webhookId"},{"sourceId":"c095d84f-b7d3-b26f-b951-0e3b571ac9dc","sourcePort":"inputObject","targetId":"2cedb848-0422-3361-5868-124f96afad55","targetPort":"in-inputObject"},{"sourceId":"c095d84f-b7d3-b26f-b951-0e3b571ac9dc","sourcePort":"Run","targetId":"2cedb848-0422-3361-5868-124f96afad55","targetPort":"run"},{"sourceId":"2cedb848-0422-3361-5868-124f96afad55","sourcePort":"out-Success","targetId":"377416ae-f251-32ff-808b-14172e0530ed","targetPort":"Success"},{"sourceId":"2cedb848-0422-3361-5868-124f96afad55","sourcePort":"out-Failure","targetId":"377416ae-f251-32ff-808b-14172e0530ed","targetPort":"Failed"},{"sourceId":"2cedb848-0422-3361-5868-124f96afad55","sourcePort":"out-ResponseData","targetId":"377416ae-f251-32ff-808b-14172e0530ed","targetPort":"response"},{"sourceId":"2cedb848-0422-3361-5868-124f96afad55","sourcePort":"out-error","targetId":"377416ae-f251-32ff-808b-14172e0530ed","targetPort":"error"},{"sourceId":"c095d84f-b7d3-b26f-b951-0e3b571ac9dc","sourcePort":"test webhook","targetId":"219697ea-03d4-af5c-9c6b-828c5a6d3d91","targetPort":"onFromStart"},{"sourceId":"c095d84f-b7d3-b26f-b951-0e3b571ac9dc","sourcePort":"n8n root domain","targetId":"641639d2-3123-ec59-88b1-ff100e00dcc8","targetPort":"value"},{"sourceId":"c095d84f-b7d3-b26f-b951-0e3b571ac9dc","sourcePort":"n8n webhook id","targetId":"1b0f780b-8598-c36f-d164-97cbdfe50c33","targetPort":"value"},{"sourceId":"64cf02e5-d905-220c-17e7-dc1ea20cb320","sourcePort":"currentState","targetId":"2cedb848-0422-3361-5868-124f96afad55","targetPort":"in-queryType"},{"sourceId":"c095d84f-b7d3-b26f-b951-0e3b571ac9dc","sourcePort":"query type","targetId":"64cf02e5-d905-220c-17e7-dc1ea20cb320","targetPort":"currentState"}],"ports":[{"name":"inputObject","type":"*","group":"Inputs","plug":"input","index":0},{"name":"Success","type":"signal","plug":"output","index":1},{"name":"Run","type":{"name":"signal","allowConnectionsOnly":true},"group":"Actions","plug":"input","index":1},{"name":"Failed","type":"signal","plug":"output","index":2},{"name":"n8n root domain","type":{"name":"string"},"default":"http://n8n.localhost","plug":"input","index":2},{"name":"response","type":"*","plug":"output","index":3},{"name":"n8n webhook id","type":{"name":"string"},"default":"fe59eb69-eccf-42f1-90b3-4ffc0c875a5e","plug":"input","index":3},{"name":"error","type":"*","plug":"output","index":4},{"name":"test webhook","type":"boolean","default":true,"group":"General","plug":"input","index":4},{"name":"query type","type":{"name":"enum","enums":["POST","GET","PUT","PATCH","DELETE","HEAD"]},"default":"POST","group":"States","plug":"input","index":5}],"roots":[]}]